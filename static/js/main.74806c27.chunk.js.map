{"version":3,"sources":["Components/Header.js","AppContext.js","Components/FolderListMain.js","Components/NoteListMain.js","Components/FolderSideBar.js","Components/NoteSideBar.js","Components/FolderMain.js","Components/NoteMain.js","Components/AddFolder.js","Components/AddNote.js","Components/FolderListError.js","Components/NoteListError.js","App.js","index.js"],"names":["Header","className","to","AppContext","createContext","folders","notes","handleDeleteNote","handleAddFolder","handleAddNote","displayName","FolderListMain","Consumer","map","folder","id","name","NoteListMain","noteId","urlDelete","fetch","method","headers","then","response","ok","Error","status","context","catch","error","console","log","noteArray","this","note","date","Date","modified","dateNormalizer","format","onClick","Component","contextType","FolderSideBar","activeClassName","NoteSideBar","currentNoteId","props","match","params","currentFolderId","find","folderId","currentFolder","history","goBack","FolderMain","filter","length","NoteMain","handleDelete","toISOString","content","AddFolder","state","folderName","folderNameValue","e","setState","target","value","preventDefault","body","JSON","stringify","json","event","Promise","reject","responseJson","alert","folderValidator","updateForm","onSubmit","htmlFor","onChange","touched","disabled","defaultProps","AddNote","folderOptions","handleModified","iso","nameValidator","placeholder","rows","cols","FolderListError","hasError","children","withRouter","NoteListError","App","fetchFolders","data","message","fetchNotes","filteredNotes","Provider","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74806c27.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"headerBox\">\r\n            <h1>\r\n                <Link to=\"/\" className=\"headerText\">Noteful</Link>\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { createContext } from \"react\"\r\n\r\nconst AppContext = createContext({\r\n    folders: [],\r\n    notes: [],\r\n    handleDeleteNote: () => {},\r\n    handleAddFolder: () => {},\r\n    handleAddNote: () => {},\r\n});\r\n\r\nAppContext.displayName = 'AppContext';\r\n\r\nexport default AppContext","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AppContext from '../AppContext';\r\nimport './FolderListMain.css'\r\n\r\nconst FolderListMain = () => {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ folders }) => (\r\n          <div className=\"folderList\">\r\n            {folders.map((folder) => {\r\n              return (\r\n                <Link\r\n                  key={folder.id}\r\n                  to={`/folder/${folder.id}`}\r\n                  className=\"folderLink\"\r\n                >\r\n                  {folder.name}\r\n                </Link>\r\n              );\r\n            })}\r\n            <Link to=\"/addFolder\">\r\n            <button className=\"folderListBtn\">Add Folder</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </AppContext.Consumer>\r\n    );\r\n  };\r\n  \r\n  export default FolderListMain;","import React, { Component } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"./NoteListMain.css\";\r\n\r\nclass NoteListMain extends Component {\r\n  static contextType = AppContext;\r\n\r\n  handleDeleteNote = (noteId) => {\r\n    const urlDelete = `http://localhost:9090/notes/${noteId}`;\r\n    fetch(urlDelete, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        } else {\r\n          this.context.handleDeleteNote(noteId);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    const { notes } = this.context;\r\n    let noteArray = notes.map((note) => {\r\n      let date = new Date(note.modified);\r\n      let dateNormalizer = format(date, \"do LLL yyyy\");\r\n\r\n      return (\r\n        <li className=\"note\" key={note.id}>\r\n          <div className=\"noteItem\">\r\n            <h2 className=\"noteName\">\r\n              <Link to={`/note/${note.id}`}>{note.name}</Link>\r\n            </h2>\r\n            <p>Last change: {dateNormalizer}</p>\r\n            <button className=\"deleteNoteBtn\" onClick={() => this.handleDeleteNote(note.id)}>Delete</button>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"noteBox\">\r\n        <ul className=\"noteList\">{noteArray}</ul>\r\n        <Link to=\"/addNote\">\r\n        <button className=\"addNoteBtn\">Add Note</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteListMain;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport AppContext from \"../AppContext\";\r\n\r\nconst FolderSideBar = () => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ folders }) => (\r\n        <div className=\"folderList\">\r\n          {folders.map((folder) => {\r\n            return (\r\n              <NavLink\r\n                key={folder.id}\r\n                to={`/folder/${folder.id}`}\r\n                className=\"folderLink\"\r\n                activeClassName=\"selected\"\r\n              >\r\n                {folder.name}\r\n              </NavLink>\r\n            );\r\n          })}\r\n          <Link to=\"/addFolder\">\r\n          <button className=\"folderListBtn\">Add Folder</button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default FolderSideBar;\r\n","import React, { Component } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"./NoteSideBar.css\";\r\n\r\nclass NoteSideBar extends Component {\r\n  static contextType = AppContext;\r\n\r\n  render() {\r\n    const { folders, notes } = this.context;\r\n    let currentNoteId = this.props.match.params.noteId;\r\n    let currentNote = notes.find((note) => note.id === currentNoteId) || {\r\n      folderId: '',\r\n    };\r\n    let currentFolderId = currentNote.folderId;\r\n    let currentFolder = folders.find(\r\n      (folder) => folder.id === currentFolderId\r\n    ) || { name: \"\" };\r\n\r\n    return (\r\n      <div className=\"noteSideBar\">\r\n        <h2>{currentFolder.name}</h2>\r\n        <button className=\"backBtn\" onClick={() => this.props.history.goBack()}>Back</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteSideBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"./FolderMain.css\";\r\n\r\nclass FolderMain extends Component {\r\n  static contextType = AppContext;\r\n\r\n  handleDeleteNote = (noteId) => {\r\n    const urlDelete = `http://localhost:9090/notes/${noteId}`;\r\n    fetch(urlDelete, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        } else {\r\n          this.context.handleDeleteNote(noteId);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    const { notes } = this.context;\r\n    let folderId = this.props.match.params.folderId;\r\n    const notesDisplayed = notes.filter((note) => note.folderId === folderId);\r\n    const noteArray = notesDisplayed.map((note) => {\r\n      let date = new Date(note.modified);\r\n      let dateNormalizer = format(date, \"do LLL yyyy\");\r\n\r\n      return (\r\n        <li className=\"note\" key={note.id}>\r\n          <div className=\"noteItem\">\r\n            <h2 className=\"noteName\">\r\n              <Link to={`/note/${note.id}`}>\r\n                {note.name}\r\n              </Link>\r\n            </h2>\r\n            <p>Last change: {dateNormalizer}</p>\r\n            <button className=\"deleteNoteBtn\" onClick={() => this.handleDeleteNote(note.id)}>Delete</button>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"noteBox\">\r\n        {noteArray.length === 0 && (\r\n          <p>Folder Empty</p>\r\n        )}\r\n        <ul className=\"noteList\">{noteArray}</ul>\r\n        <Link to=\"/addNote\">\r\n        <button className=\"addNoteBtn\">Add Note</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FolderMain;\r\n","import React, { Component } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport AppContext from \"../AppContext\";\r\nimport \"./NoteMain.css\"\r\n\r\n\r\nclass NoteMain extends Component {\r\n  static contextType= AppContext\r\n\r\n  handleDelete = (noteId) => {\r\n    const urlDelete = `http://localhost:9090/notes/${noteId}`;\r\n    fetch(urlDelete, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        } else {\r\n          this.context.handleDeleteNote(noteId);\r\n        }\r\n      })\r\n      .then(() => this.props.history.goBack())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    const { notes } = this.context\r\n  const noteId = this.props.match.params.noteId;\r\n  let note = notes.find((note) => note.id === noteId) || {\r\n    id: noteId,\r\n    modified: new Date().toISOString(),\r\n  };\r\n\r\n  let date = new Date(note.modified);\r\n  let dateNormalizer = format(date, \"do LLL yyyy\");\r\n\r\n  return (\r\n    <section className=\"detailedNote\">\r\n      <div className=\"noteTitle\">\r\n        <h2>{note.name}</h2>\r\n      </div>\r\n      <div className=\"noteInfo\">\r\n        <p>Last change: {dateNormalizer}</p>\r\n      </div>\r\n      <div className=\"noteDetail\">{note.content}</div>\r\n      <button className=\"deleteBtn\" onClick={() => this.handleDelete(note.id)}>Delete</button>\r\n    </section>\r\n  );\r\n}\r\n}\r\nexport default NoteMain;\r\n","import React, { Component } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport PropTypes from 'prop-types';\r\nimport './AddFolder.css'\r\n\r\nclass AddFolder extends Component {\r\n  static defaultProps = {\r\n    history: { goBack: () => {} }\r\n  }\r\n  state = { folderName: \"\" };\r\n\r\n  static contextType = AppContext;\r\n\r\n  folderNameValue = (e) => {\r\n    this.setState({ folderName: e.target.value });\r\n  };\r\n\r\n  handleAddFolder = (e) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:9090/folders`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: this.state.folderName }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.json().then((event) => Promise.reject(event));\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(responseJson => {\r\n        this.context.handleAddFolder(responseJson);\r\n        this.setState({ folderName: \"\" });\r\n        this.props.history.goBack();\r\n      })\r\n      .catch(() => alert(\"Something went wrong\"));\r\n  };\r\n\r\n  folderValidator = () => {\r\n    if (this.state.folderName === \"\") {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  updateForm = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value, touched: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addFolderBox\">\r\n        <form\r\n          className=\"addFolderMenu\"\r\n          onSubmit={(e) => this.handleAddFolder(e)}\r\n        >\r\n          <label htmlFor=\"nameInput\">Folder Name</label>\r\n          <input\r\n            className=\"nameInput\"\r\n            name=\"nameInput\"\r\n            id=\"folderName\"\r\n            onChange={this.updateForm}\r\n          ></input>\r\n          {this.folderValidator() && this.state.touched && (\r\n            <p className=\"warningBox\">Don't forget to add a name!</p>\r\n          )}\r\n          <button className=\"submit\" disabled={this.folderValidator()}>Add Folder</button>\r\n        </form>\r\n        <button className=\"backBtn\" onClick={this.props.history.goBack}>Go Back</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddFolder.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default AddFolder;\r\n","import React, { Component } from \"react\";\r\nimport AppContext from \"../AppContext\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./AddNote.css\"\r\n\r\nclass AddNote extends Component {\r\n  static defaultProps = {\r\n    history: { goBack: () => {} },\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    content: \"\",\r\n    folderId: \"\",\r\n    modified: \"\",\r\n    touched: false,\r\n  };\r\n\r\n  static contextType = AppContext;\r\n\r\n  updateForm = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value, touched: true });\r\n  };\r\n\r\n  handleAddNote = (e) => {\r\n    e.preventDefault();\r\n    const url = `http://localhost:9090/notes`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        content: this.state.content,\r\n        folderId: this.state.folderId,\r\n        modified: this.state.modified,\r\n      }),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.json().then((event) => Promise.reject(event));\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(responseJson => {\r\n        this.context.handleAddNote(responseJson);\r\n        this.props.history.goBack();\r\n      })\r\n      .catch(() =>\r\n        alert(\r\n          \"Oh dang, you were never supposed to see this page...this is awkward, please refresh the page.\"\r\n        )\r\n      );\r\n  };\r\n\r\n  folderOptions = () => {\r\n    let options = this.context.folders.map((folder) => {\r\n      return (\r\n        <option key={folder.id} value={folder.id}>\r\n          {folder.name}\r\n        </option>\r\n      );\r\n    });\r\n    return options;\r\n  };\r\n\r\n  handleModified = () => {\r\n    let today = new Date();\r\n    let iso = today.toISOString();\r\n    this.setState({ modified: iso });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleModified();\r\n  }\r\n\r\n  nameValidator = () => {\r\n    if (this.state.name === \"\") {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addNoteBox\">\r\n        <form className=\"addNoteMenu\" onSubmit={(e) => this.handleAddNote(e)}>\r\n          <label htmlFor=\"noteNameInput\">Note Name:</label>\r\n          <input\r\n            className=\"noteNameInput\"\r\n            id=\"name\"\r\n            name=\"noteNameInput\"\r\n            placeholder=\"Enter name here\"\r\n            onChange={(e) => this.updateForm(e)}\r\n          ></input>\r\n          {this.nameValidator() && this.state.touched && (\r\n            <p className=\"warningBox\">Don't forget to add a name!</p>\r\n          )}\r\n          <label htmlFor=\"noteDetail\">Note Details:</label>\r\n          <textarea\r\n            className=\"noteDetail\"\r\n            id=\"content\"\r\n            name=\"noteDetail\"\r\n            rows=\"4\"\r\n            cols=\"50\"\r\n            placeholder=\"Put note details here\"\r\n            onChange={(e) => this.updateForm(e)}\r\n          ></textarea>\r\n          <select\r\n            name=\"folder\"\r\n            id=\"folderId\"\r\n            onChange={(e) => this.updateForm(e)}\r\n          >\r\n            <option>Select Folder</option>\r\n            {this.folderOptions()}\r\n          </select>\r\n          <div>\r\n            <button className=\"submitNote\" disabled={this.nameValidator()}>\r\n              Submit Note\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <button className=\"backBtn\" onClick={this.props.history.goBack}>\r\n          Go Back\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddNote.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default AddNote;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass FolderListError extends Component {\r\n    state = { hasError: false };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <div className=\"errorBox\">\r\n                    <p>Oh no! your folders aren't here...Try refreshing the page.</p>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(FolderListError)","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass NoteListError extends Component {\r\n    state = { hasError: false };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <div className=\"errorBox\">\r\n                    <p>Oh no! your notes aren't here...Try refreshing the page.</p>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(NoteListError)","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport FolderListMain from \"./Components/FolderListMain\";\nimport NoteListMain from \"./Components/NoteListMain\";\nimport FolderSideBar from \"./Components/FolderSideBar\";\nimport NoteSideBar from \"./Components/NoteSideBar\";\nimport FolderMain from \"./Components/FolderMain\";\nimport NoteMain from \"./Components/NoteMain\";\nimport AppContext from \"./AppContext\";\nimport AddFolder from \"./Components/AddFolder\";\nimport AddNote from \"./Components/AddNote\";\nimport FolderListError from \"./Components/FolderListError\"\nimport NoteListError from \"./Components/NoteListError\"\n\nclass App extends Component {\n  state = {\n    folders: [],\n    notes: [],\n  };\n\n  fetchFolders = () => {\n    let url = \"http://localhost:9090/folders\";\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.status);\n      })\n      .then((data) => {\n        this.setState({ folders: data });\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  fetchNotes = () => {\n    let url = \"http://localhost:9090/notes\";\n    fetch(url)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.status);\n      })\n      .then((data) => {\n        this.setState({ notes: data });\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  handleDeleteNote = (noteId) => {\n    let filteredNotes = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: filteredNotes });\n  };\n\n  handleAddFolder = (folder) => {\n    this.setState({ folders: [...this.state.folders, folder] });\n  };\n\n  handleAddNote = (note) => {\n    this.setState({ notes: [...this.state.notes, note] });\n  };\n\n  componentDidMount() {\n    this.fetchFolders();\n    this.fetchNotes();\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Header />\n        <AppContext.Provider\n          value={{\n            folders: this.state.folders,\n            notes: this.state.notes,\n            handleDeleteNote: this.handleDeleteNote,\n            handleAddFolder: this.handleAddFolder,\n            handleAddNote: this.handleAddNote,\n          }}\n        >\n          <Switch>\n          <Route path=\"/addFolder\" exact component={AddFolder} />\n          <Route path=\"/addNote\" exact component={AddNote} />\n          <div className=\"bodyBox\">\n            <section className=\"sideBarBox\">\n              <FolderListError>\n              <Route path=\"/\" exact component={FolderListMain} />\n              <Route path=\"/folder/:folderId\" component={FolderSideBar} />\n              <Route path=\"/note/:noteId\" component={NoteSideBar} />\n              </FolderListError>\n            </section>\n            <section className=\"noteViewBox\">\n              <Switch>\n              <NoteListError>\n                <Route path=\"/\" exact component={NoteListMain} />\n                <Route path=\"/folder/:folderId\" component={FolderMain} />\n                <Route path=\"/note/:noteId\" component={NoteMain} />\n              </NoteListError>\n              </Switch>\n            </section>\n          </div>\n          </Switch>\n        </AppContext.Provider>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n   <BrowserRouter>\n    <App />\n   </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}